{"version":3,"sources":["components/utilities/FormatPrice.js","components/MenuItem.js","components/MenuList.js","components/utilities/menu.js","components/Order.js","components/App.js","reportWebVitals.js","index.js"],"names":["dollars","Intl","NumberFormat","style","currency","FormatPrice","priceInCents","format","MenuItem","props","menuItemHTML","className","name","description","price","type","onClick","event","preventDefault","addToCart","MenuList","MenuListHTML","menuItems","map","menuItem","id","category","Order","orderHTML","order","index","useState","setName","phoneNumber","setPhoneNumber","total","forEach","subtotal","onSubmit","addOrder","value","onChange","target","placeholder","BASE_URL","App","setOrder","newOrder","a","fetch","method","headers","body","JSON","stringify","response","ok","json","data","selection","setSelection","catgory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38a46c9f.chunk.js","sourcesContent":["let dollars = Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n  \n  function FormatPrice(priceInCents) {\n    return dollars.format(priceInCents / 100);\n  }\n  \n  export default FormatPrice;","import FormatPrice from \"./utilities/FormatPrice\";\n\nfunction MenuItem(props) { \n    const menuItemHTML = (\n        \n            <li className=\"menu-item\">\n                 <h3>{props.name}</h3>\n                 <p>{props.description}</p>\n                 <p>{FormatPrice(props.price)}</p>\n                 <button type=\"button\" name={props.name} onClick={handleChange}>Add Item</button> \n             </li>\n        \n    );\n    \n    function handleChange(event) {\n        event.preventDefault();\n        // console.log('you clicked it!');\n        props.addToCart(props.name, props.price);\n    }\n\n    return (\n        <ul className=\"menu-list\">\n            {menuItemHTML}\n        </ul>\n    )\n}\n\nexport default MenuItem\n\n\n\n//what does it mean to be a menuitem (name description price)","import MenuItem from './MenuItem'\n\nfunction MenuList(props) {\n    // console.log(props);\n    \n   const MenuListHTML = props.menuItems.map(menuItem => \n    <MenuItem key={menuItem.id} {...menuItem} addToCart={props.addToCart}/>)\n\n\n    return(\n        <section className=\"menu-section\">\n            {MenuListHTML}\n        </section>\n    );\n\n};\n\nexport default MenuList","const menuItems = [\n{   id:1,\n    category: 'Appetizer',\n    name: 'Bread & Pesto',\n    description:'Grilled stecca bread served with pistachio pesto and olive oil with fresh spices ',\n    price: 650\n}, {\n    id:2,\n    category: 'Appetizer',\n    name: 'Meat & Cheese Board',\n    description:'Toasted stecca, artisanal cheeses, salami, house pickles, condimento',\n    price: 1800\n}, {   \n    id:3,\n    category: 'Appetizer',\n    name: 'Italian Style Salad',\n    description:'Grilled stecca bread served with pistachio pesto and olive oil with fresh spices ',\n    price: 750\n}, {\n    id:4,\n    category: 'Appetizer',\n    name: 'Caprese',\n    description:'Fresh tomatoes, mozzerella, and basil topped with olive oil and balsalmic vinegar',\n    price: 800\n}, {\n    id:5,\n    category: 'Appetizer',\n    name: 'Zucchini Blossoms',\n    description:'Zucchini flowers battered and deep fried until crispy',\n    price:800\n}, {\n    id:6,\n    category: 'Entree',\n    name: 'Spaghetti & Meatballs',\n    description:'Homemade spaghetti topped with Nana\\'s sauce and house made meatballs',\n    price:1300\n}, {\n    id:7,\n    category: 'Entree',\n    name: 'Nana\\'s Manigott (Manicotti)',\n    description:'Homemade shells filled with ricotta cheese and topped with Nana\\'s sauce',\n    price:1350\n}, {\n    id:8,\n    category: 'Entree',\n    name: 'Pesto Tortellini',\n    description:'Cheese tortellini with our specially made pistachio pesto',\n    price:1300\n}, {\n    id:9,\n    category: 'Entree',\n    name: 'Baked Ziti',\n    description:'Ziti noodles mixed with marinara sauce and a variety of Italian cheese baked to perfection',\n    price:1200\n}, {\n    id:10,\n    category: 'Entree',\n    name: 'Ravioli',\n    description:'Spinach and cheese ravioli served with a cream sauce',\n    price: 1200\n}, {\n    id:11,\n    category: 'Entree',\n    name: 'Sausage and Peppers',\n    description:'Locally made sweet italian sausage grilled with a mix of bell peppers and onions',\n    price:'1400'\n}, {\n    id:12,\n    category: 'Entree',\n    name: 'Linguini with Clam Sauce',\n    description:'House made linguini noddles with a white wine clam sauce',\n    price: 1400\n}, {\n    id:13,\n    category: 'Entree',\n    name: 'Eggplant Parmesean',\n    description:'Eggplant battered and breaded baked with cheese and marinara sauce',\n    price: 1300\n}, {\n    id:14,\n    category: 'Entree',\n    name: 'Chicken Marsala',\n    description:'Chicken breast in a rich, creamy sauce of Marsala wine, onion, lemon juice and sliced mushrooms.',\n    price: 1500\n}, {\n    id:15,\n    category: 'Entree',\n    name: 'Mushroom Risotto',\n    description:'Creamy risotto with baby bella mushrooms',\n    price: 1300\n}, {\n    id:16,\n    category: 'Entree',\n    name: 'Rigatoni & Vodka Sauce',\n    description:'Rigatoni pasta served with a creamy tomato vodka sauce',\n    price: 1200\n}, {\n    id:17,\n    category: 'Entree',\n    name: 'Stuffed Shells',\n    description:'Three extra large shells stuffed full of ricotta cheese and fresh herbs',\n    price: 1200\n}, {\n    id:18,\n    category: 'Entree',\n    name: 'Lasagna',\n    description:'Layers of pasta, mix of cheese, and meat sauce, baked to perfection',\n    price: 1300\n}, {\n    id:19,\n    category: 'Entree',\n    name: 'Italian Hoagie',\n    description:'Fresh Italian bread with Genoa salami, ham, capicola, provolone cheese, LTO, olive oil, vinegar and oregano',\n    price: 1400\n}, {\n    id:20,\n    category: 'Dessert',\n    name: 'Cannoli',\n    description:'Crispy pastry dough shell filled with a sweet creamy ricotta filling',\n    price:400\n}, {\n    id:21,\n    category: 'Dessert',\n    name: 'Tiramisu',\n    description:'Lady fingers dipped in coffee, layed with whipped marscapone cheese and cocoa',\n    price: 700\n}, {\n    id:22,\n    category: 'Dessert',\n    name: 'Spumoni',\n    description:'Triple layer of pistachio, chocolate, and cherry gelato',\n    price: 600\n}, {\n    id:23,\n    category: 'Drink',\n    name: 'Negroni',\n    description:'It\\'s not very good, 0 out of 10 would not recommend',\n    price: 900\n}, {\n    id:24,\n    category: 'Drink',\n    name: 'Chianti',\n    description:'By the bottle only',\n    price: 1600\n}, {\n    id:25,\n    category: 'Drink',\n    name: 'Espresso',\n    description:'Locally roasted espresso beans',\n    price: 500\n}];\n\nexport default menuItems;","import {useState} from 'react'\nimport FormatPrice from \"./utilities/FormatPrice\";\n\nfunction Order(props) {\n    \n    const orderHTML = props.order.map((order, index) => {\n        return (\n        <div key={index} className=\"added-item\"> \n            <p>{order.name} {FormatPrice(order.price)}</p>\n        </div>\n        );\n    });\n    \n\n    const[name, setName] = useState(\"\");\n    const[phoneNumber, setPhoneNumber] = useState(\"\");\n    // const[newOrder, setNewOrder] = useState(props.order)\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.addOrder(props.order, name, phoneNumber);\n        setName(\"\");\n        setPhoneNumber(\"\");\n    }\n\n    function handleNameChange(event) {\n        setName(event.target.value)\n    }\n\n    function handleNumberChange(event) {\n        setPhoneNumber(event.target.value)\n    }\n\n    function subtotal() {\n        let total = 0;\n        props.order.forEach((order) => {\n            total = total + order.price;\n        });\n        \n        return FormatPrice(total);\n    }\n\n    return (\n        <aside className=\"order-panel\">\n        \n        {orderHTML}\n        <p id=\"subtotal\"> Your order total: {subtotal()} </p>\n        \n        <p>Enter your name and phone number below. Please review your order carefully before you submit your order.</p>\n        <form onSubmit={handleSubmit}>\n            <input name=\"text\" type=\"text\" id=\"full-name\" value={name} onChange={handleNameChange} placeholder=\"Full Name\"></input>\n            <input name=\"text\" type=\"text\" id=\"phone-number\" value={phoneNumber} onChange={handleNumberChange} placeholder=\"Phone Number\"></input>\n            <button type=\"submit\" className=\"submit-order\">Submit Your Order</button>\n        </form>\n        </aside>\n        \n    )\n    \n};\n\nexport default Order","// import MenuItem from './MenuItem'\nimport {useState} from 'react';\nimport \"./App.css\";\nimport MenuList from './MenuList'\nimport menuItems from './utilities/menu.js'\nimport Order from './Order'\n\n\nconst BASE_URL = \"https://tiny-taco-server.herokuapp.com/nonnas-kitchen/\";\n\n\nfunction App() {  \n  // const [menuItems, setMenuItems] = useState(menuItems);\n  const [order, setOrder] = useState([]);\n  // const [selection, setSelection] = useState('Appetizer')\n  \n  \n  function addToCart(name, price) {\n    const newOrder = {name, price};\n    setOrder([...order, newOrder])\n  }\n\n  async function addOrder(order, name, phoneNumber) {\n    const newOrder = {order, name, phoneNumber};\n    const response = await fetch(`${BASE_URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n    }, \n      body: JSON.stringify(newOrder),\n  });\n\n    if (response.ok) {\n      const data = await response.json();\n      setOrder([...order, data]);\n    }\n  }\n\n  const [selection, setSelection] = useState('appetizer')\n  \n  \n  if (selection === 'appetizer') {\n    menuItems.catgory = \"Appetizer\"\n  } else if (selection === 'entrees') {\n    menuItems.category = \"Entree\"\n  } else if (selection === 'desserts') {\n    menuItems.category = \"Dessert\"\n  } else if (selection === 'drinks') {\n    menuItems.category = \"Drink\"\n  };\n\n\n\n\n  return (\n  \n    <div className=\"App\">\n      <header className=\"header\">\n        <nav>\n          <ul className=\"nav-bar\">\n            <li>Home</li>\n            <li>About Us </li>\n            <li>Contact Us</li>\n          </ul>\n        </nav>\n        <h1>Nonna's Kitchen</h1>\n      </header>\n      <nav className=\"category-bar\">\n        <button type=\"submit\" className=\"appetizer\" onClick={() => setSelection(\"Appetizer\")}>Appetizers</button>\n        <button type=\"submit\" className=\"entrees\">Entrees</button>\n        <button type=\"sumbit\" className=\"desserts\">Desserts</button>\n        <button type=\"submit\" className=\"drinks\">Drinks</button>\n      </nav>\n     <div className=\"container\">\n     <MenuList menuItems={menuItems} order={order} setOrder={setOrder} addToCart={addToCart}/>\n     <Order  order={order} setOrder={setOrder} addToCart={addToCart} addOrder={addOrder}/>\n     </div>\n     <div className=\"pic-ribbon\">\n        \n     </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}